{"version":3,"sources":["components/User/User.module.css","components/Statistics/Statistics.module.css","components/Friends/Friends.module.css","components/App/App.module.css","components/TransactionHistory/TransactionHistory.module.css","components/User/User.js","components/Statistics/Statistics.js","components/Friends/Friends.js","components/TransactionHistory/TransactionHistory.js","components/App/App.js","index.js"],"names":["module","exports","UserProfile","name","tag","location","avatar","stats","followers","views","likes","className","styles","profile","description","src","alt","label","quantity","Statistics","title","statistics","statList","map","id","percentage","item","key","style","backgroundColor","Math","floor","random","toString","FriendsList","friends","friendsList","isOnline","statusOnline","statusOffline","width","TransactionHistory","transactions","transactionHistory","console","log","type","amount","currency","App","container","User","user","statisticalData","Friends","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27af9352.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"User_profile__1o8S-\",\"description\":\"User_description__j8Y8f\",\"avatar\":\"User_avatar__3KurK\",\"name\":\"User_name__2V0Wy\",\"tag\":\"User_tag__1mK-p\",\"location\":\"User_location__2_X87\",\"stats\":\"User_stats__1MzBI\",\"label\":\"User_label__1aPfz\",\"quantity\":\"User_quantity__3r4Xi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1NFbv\",\"statList\":\"Statistics_statList__3irk9\",\"item\":\"Statistics_item__omcm_\",\"label\":\"Statistics_label__35avB\",\"percentage\":\"Statistics_percentage__R-dbO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsList\":\"Friends_friendsList__10d5_\",\"item\":\"Friends_item__1xzKM\",\"avatar\":\"Friends_avatar__X0NmF\",\"name\":\"Friends_name__2qGkk\",\"statusOnline\":\"Friends_statusOnline__1jbNZ\",\"statusOffline\":\"Friends_statusOffline__3Xm5A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__18fFj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1_JsU\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './User.module.css';\r\n\r\nconst UserProfile = ({\r\n  name,\r\n  tag,\r\n  location,\r\n  avatar,\r\n  stats: { followers, views, likes },\r\n}) => (\r\n  <div className={styles.profile}>\r\n    <div className={styles.description}>\r\n      <img src={avatar} alt={name} className={styles.avatar} />\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.tag}>@{tag}</p>\r\n      <p className={styles.location}>{location}</p>\r\n    </div>\r\n    <ul className={styles.stats}>\r\n      <li>\r\n        <span className={styles.label}>Followers</span>\r\n        <span className={styles.quantity}>{followers}</span>\r\n      </li>\r\n      <li>\r\n        <span className={styles.label}>Views</span>\r\n        <span className={styles.quantity}>{views}</span>\r\n      </li>\r\n      <li>\r\n        <span className={styles.label}>Likes</span>\r\n        <span className={styles.quantity}>{likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nUserProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default UserProfile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst randomColor = () => Math.floor(Math.random() * 16777215).toString(16);\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className={styles.statistics}>\r\n    {title && <h2 className={styles.title}>{title}</h2>}\r\n\r\n    <ul className={styles.statList}>\r\n      {stats.map(({ id, label, percentage }) => (\r\n        <li\r\n          className={styles.item}\r\n          key={id}\r\n          style={{ backgroundColor: '#' + randomColor() }}\r\n        >\r\n          <span className={styles.label}>{label}</span>\r\n          <span className={styles.percentage}>{percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Friends.module.css';\r\n\r\nconst FriendsList = ({ friends }) => (\r\n  <ul className={styles.friendsList}>\r\n    {friends.map(({ id, avatar, name, isOnline }) => (\r\n      <li className={styles.item} key={id}>\r\n        <span\r\n          className={isOnline ? styles.statusOnline : styles.statusOffline}\r\n        ></span>\r\n        <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n        <p className={styles.name}>{name}</p>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendsList.propTypes = {\r\n  friends: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FriendsList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ transactions }) => (\r\n  <table className={styles.transactionHistory}>\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {console.log(transactions)}\r\n      {transactions.map(({ id, type, amount, currency }) => (\r\n        <tr key={id}>\r\n          <td>{type}</td>\r\n          <td>{amount}</td>\r\n          <td>{currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  transactions: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport styles from './App.module.css';\r\nimport UserProfile from '../User/User';\r\nimport user from '../../data/user.json';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport statisticalData from '../../data/statistical-data.json';\r\nimport FriendsList from '../Friends/Friends';\r\nimport friends from '../../data/friends.json';\r\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\r\nimport transactions from '../../data/transactions.json';\r\n\r\nconst App = (\r\n  <div className={styles.container}>\r\n    <UserProfile {...user} />\r\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n    <FriendsList friends={friends} />\r\n    <TransactionHistory transactions={transactions} />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(App, document.getElementById('root'));\n"],"sourceRoot":""}